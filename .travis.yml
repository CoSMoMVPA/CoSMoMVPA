# vim ft=yaml
# travis-ci.org definition for CoSMoMVPA build (based on PyMVPA, which is
# based on nipype configuration, which in turn was based on nipy)
#
# We pretend to be erlang because we need GNU Octave which is not 
# available (as of April 2015)

language: erlang
cache:
  - apt
env:
 global:
    - OCTAVE=octave
    - EXTERNALS="afni surfing"
    # - PYTHON=python3 PYSUF=3 : python3-numpy not currently available
before_install:
    # to prevent IPv6 being used for APT
    - sudo bash -c "echo 'Acquire::ForceIPv4 \"true\";' > /etc/apt/apt.conf.d/99force-ipv4"
    - travis_retry sudo apt-get install -y software-properties-common python-software-properties
    - travis_retry sudo apt-add-repository -y ppa:octave/stable
    - travis_retry sudo apt-get -y -qq update
    # get Octave 3.8
    - travis_retry sudo apt-get -y install octave
    - travis_retry sudo apt-get -y install liboctave-dev
    # go up one level to retrieve MOxUnit
    - cd ..
    - git clone git://github.com/nno/MOxUnit.git
script:
    - ls
    - ls CoSMoMVPA
    - ls CoSMoMVPA/mvpa
    - PTH=`pwd`
    - CMD="more('off');"
    - OCTAVEPTH="${PTH}/CoSMoMVPA/mvpa:${PTH}/CoSMoMVPA/tests:${PTH}/MOxUnit/MOxUnit"
    # optionally enable surfing toolbox
    - if [[ "$EXTERNALS" = *"surfing"* ]]; then
          git clone git://github.com/nno/surfing.git --depth 1;
          CMD="${CMD}cd('surfing');surfing_compile_mex();cd('..');";
          CMD="${CMD}surfing_set_path();";
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/surfing:${PTH}/surfing/surfing";
      fi
    # optionally install afni
    - if [[ "$EXTERNALS" = *"afni"* ]]; then
          git clone git://github.com/afniHQ/AFNI.git --depth 1;
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/AFNI/src/matlab";
      fi
    - CMD="${CMD}cosmo_set_path();"
    - CMD="${CMD}result=moxunit_runtests('-verbose','CoSMoMVPA/tests');"
    - CMD="${CMD}exit(~result);"
    - $OCTAVE --path "${OCTAVEPTH}" --eval "${CMD}"

