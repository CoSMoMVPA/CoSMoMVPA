# vim ft=yaml
# travis-ci.org definition for CoSMoMVPA build (based on PyMVPA, which is
# based on nipype configuration, which in turn was based on nipy)
#
# We pretend to be erlang because we need GNU Octave which is not 
# available (as of April 2015)

language: erlang
cache:
  - apt
env:
 global:
    - OCTAVE=octave
 matrix:
    - EXTERNALS=""
    - EXTERNALS="afni surfing fieldtrip libsvm gifti"
before_install:
    # to prevent IPv6 being used for APT
    - sudo bash -c "echo 'Acquire::ForceIPv4 \"true\";' > /etc/apt/apt.conf.d/99force-ipv4"
    # Prepare to get Octave
    - travis_retry sudo apt-get install -y -qq software-properties-common python-software-properties
    - travis_retry sudo apt-add-repository -y ppa:octave/stable
    - travis_retry sudo apt-get -y -qq update

    # get Octave 3.8
    - travis_retry sudo apt-get -y install octave
    - travis_retry sudo apt-get -y install liboctave-dev
    - travis_retry sudo apt-get -y -qq install octave

    # go up one level to retrieve MOxUnit
    - cd ..
    - git clone git://github.com/nno/MOxUnit.git
install:
    - PTH=`pwd`
    - BUILDCMD="more('off');"
    - OCTAVEPTH="${PTH}"
    # optionally enable surfing toolbox
    - if [[ "$EXTERNALS" = *"surfing"* ]]; then
          git clone git://github.com/nno/surfing.git --depth 1;
          BUILDCMD="${BUILDCMD}cd('${PTH}/surfing');";
          BUILDCMD="${BUILDCMD}surfing_compile_mex();";
          BUILDCMD="${BUILDCMD}surfing_set_path();";
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/surfing:${PTH}/surfing/surfing";
      fi
    # optionally install afni
    # Hopefull soon the official AFNI Matlab code can be used
    # currently (Apr 2015) we use our own version that
    # is compatible with Octave
    # (PR: https://github.com/afniHQ/AFNI/pull/8)
    # TODO: git clone git://github.com/afniHQ/AFNI.git --depth 1
    - if [[ "$EXTERNALS" = *"afni"* ]]; then
          git clone -b _cleanup git://github.com/nno/AFNI.git;
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/AFNI/src/matlab";
      fi
    # optionally install FieldTrip
    # Hopefull soon the official FieldTrip code can be used
    # currently (Apr 2015) we use our own version that
    # is compatible with Octave
    # (PR: https://github.com/fieldtrip/fieldtrip/pull/54)
    # TODO: git clone git://github.com/fieldtrip/fieldtrip.git --depth 1
    - if [[ "$EXTERNALS" = *"fieldtrip"* ]]; then
          git clone -b octave git://github.com/nno/fieldtrip.git;
          BUILDCMD="${BUILDCMD}ft_defaults();"
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/fieldtrip";
      fi

    # optionally install libsvm
    - if [[ "$EXTERNALS" = *"libsvm"* ]]; then
          git clone git://github.com/cjlin1/libsvm.git;
          BUILDCMD="${BUILDCMD}cd('${PTH}/libsvm/matlab');";
          BUILDCMD="${BUILDCMD}make;";
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/libsvm/matlab";
      fi
    # optionally install gifti library
    # TODO: update URL to refer to original website:
    #   http://www.artefact.tk/software/matlab/gifti/
    # when updated to version 1.5
    - if [[ "$EXTERNALS" = *"gifti"* ]]; then
          git clone git://github.com/nno/matlab_GIfTI;
          BUILDCMD="${BUILDCMD}cd('${PTH}/matlab_GIfTI/@gifti/private');";
          BUILDCMD="${BUILDCMD}mex('zstream.c');";
          OCTAVEPTH="${OCTAVEPTH}:${PTH}/matlab_GIfTI";
      fi
    - BUILDCMD="${BUILDCMD};savepath();exit();"
    - $OCTAVE --path "${OCTAVEPTH}" --eval "${BUILDCMD}"


before_script:
    # add path for CoSMoMVPA
    - OCTAVEPTH="${OCTAVEPTH}:${PTH}/CoSMoMVPA/mvpa"
    - OCTAVEPTH="${OCTAVEPTH}:${PTH}/CoSMoMVPA/tests"
    - OCTAVEPTH="${OCTAVEPTH}:${PTH}/MOxUnit/MOxUnit"
    - TESTCMD="more('off');";
    - TESTCMD="${TESTCMD}cosmo_set_path();"

    # randomize number generator and print the state
    - TESTCMD="${TESTCMD}prng_state=round(1000*clock());"
    - TESTCMD="${TESTCMD}disp('PRNG state:');disp(prng_state);fprintf('\n')"
    - TESTCMD="${TESTCMD}rand('state',prng_state);"

    # show path
    - TESTCMD="${TESTCMD}fprintf('path:\n%s\n', path());"

    # run tests, and quit with error if any test fails or errors
    - TESTDIR="CoSMoMVPA/tests"
    - TESTCMD="${TESTCMD}passed=moxunit_runtests('-verbose','${TESTDIR}');"
    - TESTCMD="${TESTCMD}if(~passed),cosmo_wtf();end;"
    - TESTCMD="${TESTCMD}exit(~passed);"
script:
    - $OCTAVE --path "${OCTAVEPTH}" --eval "${TESTCMD}"

