.. run_voxel_selection_searchlight

run voxel selection searchlight
===============================
.. code-block:: matlab

<<<<<<< HEAD
    datadir='../data/small/s01/stats/';
    fn=[datadir 'glm_T_stats_perrun.nii.gz'];
    maskfn=[datadir 'brain_mask.nii.gz'];
=======
    %% Spherical searchlight
    % this example implements a spherical searchlight using
    % cosmo_spherical_voxel_selection and performs crossvalidation
    % with a nearest neighbor classifier
    
    datadir=cosmo_get_data_path('s01');
    fn=[datadir 'glm_T_stats_perrun.nii'];
    maskfn=[datadir 'brain_mask.nii'];
>>>>>>> c4b519d40110aed8222949935d9bb74bb8c5de26
    radius=3;
    targets=repmat(1:6,1,10);
    chunks=floor(((1:60)-1)/6)+1;
    classifier=@cosmo_classify_nn;
<<<<<<< HEAD
=======
    classifier_opt=struct();
>>>>>>> c4b519d40110aed8222949935d9bb74bb8c5de26
    
    % load data and set sample attributes
    ds=cosmo_fmri_dataset(fn, 'mask', maskfn, 'targets', targets, 'chunks', chunks);
    nfeatures=size(ds.samples,2);
    center_ids=1:nfeatures; % for now, consider all voxels
    
    % use voxel selection function
    center2neighbors=cosmo_spherical_voxel_selection(ds, radius, center_ids);
<<<<<<< HEAD
    %%
    % for cross validation
    partitions=cosmo_nfold_partition(ds.sa.chunks);
    
    % space for output
    ncenters=numel(center_ids);
    accs=zeros(1,ncenters);
    
=======
    %% set up cross validation
    % 
    partitions=cosmo_nfold_partitioner(ds.sa.chunks);
    
    %% Allocate space for output
    ncenters=numel(center_ids);
    accs=zeros(1,ncenters);
    
    %% Run the searchlight
>>>>>>> c4b519d40110aed8222949935d9bb74bb8c5de26
    % go over all features, run cross-validation and store the classiifcation
    % accuracies.
    for k=1:ncenters
        center_id=center_ids(k);
        sphere_feature_ids=center2neighbors{center_id};
        
<<<<<<< HEAD
        sphere_ds=cosmo_dataset_select_features(ds, sphere_feature_ids);
=======
        sphere_ds=cosmo_dataset_slice_features(ds, sphere_feature_ids);
>>>>>>> c4b519d40110aed8222949935d9bb74bb8c5de26
        
        % run cross validation
        [pred_cv,acc]=cosmo_cross_validate(sphere_ds, classifier, partitions, classifier_opt);
        
        % for now, just store the accuracy (not the predictions)
        accs(k)=acc;
        
        % show progress every 100 steps
        if k==1 || mod(k,100)==0 || k==nfeatures
            fprintf('%d / %d features: average accuracy %.3f\n', k, nfeatures, mean(accs(1:k)));
        end
    end
    
<<<<<<< HEAD
    % store the output
    res_map=ds;
    res_map.samples=accs;
    
    map2nifti(res_map,[datadir  '_slmap7.nii.gz']);
=======
    %% store the output
    res_map=ds;
    res_map.samples=accs;
    
    cosmo_map2nifti(res_map,[datadir  'voxel_selection_searchlight.nii']);
>>>>>>> c4b519d40110aed8222949935d9bb74bb8c5de26
